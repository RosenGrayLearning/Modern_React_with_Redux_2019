 
//Reducers (Departments)
/*
 * @param1: exsiting little piece of data from our central repository, which                   belongs to this in particular department
 * @param2: action() - which holds the new data and will be updated accordingly
*/

const claimHistory = (oldListOfClaims = [],action) => {
  if(action.type === 'CREATE_CLAIM'){
    //We care about this action (Form)
    //update our oldListOfClaims 
    return [...oldListOfClaims,action.payload];
  }
  
  // We dont care about the action (form)
  return oldListOfClaims;
};

const accounting = (bagOfMoney = 100 ,action) => {
  if(action.type === 'CREATE_CLAIM'){
    return bagOfMoney - action.payload.amountOfMoneyToCollect;
  } else if(action.type === 'CREATE_POLICY'){
       return bagOfMoney + action.payload.amount;
  }
  
  return bagOfMoney;
};

const policies = (listOfPolicies = [] ,action) => {
  if(action.type === 'CREATE_POLICY'){
   return [...listOfPolicies,action.payload.name];
  }else if(action.type === 'DELETE_POLICY'){
       return listOfPolicies.filter(name => name !== action.payload.name);
    }
 
  return listOfPolicies;
};